name: 'load_testplan'
description: 'Fetches the testplan and sets environment variables for it'
inputs:
  testplan:
    type: string
    required: true
    description: 'URL/file name of the yaml file to load'
  repository:
    type: string
    required: false
    description: 'Optional name of the repository to check out. Needed, if "testplan" is not a URL'
    default: ''
  ref:
    type: string
    required: false
    description: 'Branch, tag or hash of the commit to check out'
    default: ''
  override:
    type: string
    required: false
    description: 'Optional YAML code to override the testplan'
    default: ''
runs:
  using: composite
  steps:
    - name: 'Checkout repository'
      if: ${{ inputs.repository != '' }}
      uses: actions/checkout@v3
      with:
        # Repository name with owner. For example, actions/checkout
        # Default: ${{ github.repository }}
        repository: ${{ inputs.repository }}
        ref: ${{ inputs.ref }}

    - name: 'Initialize default values'
      shell: bash
      run: |
        cat >.testplan.yml <<EOF
        github:
          action: &github_action '${{ github.action }}'
          action_path: &github_action_path '${{ github.action_path }}'
          action_ref: &github_action_ref '${{ github.action_ref }}'
          action_repository: &github_action_repository '${{ github.action_repository }}'
          action_status: &github_action_status '${{ github.action_status }}'
          actor: &github_actor '${{ github.actor }}'
          actor_id: &github_actor_id '${{ github.actor_id }}'
          api_url: &github_api_url '${{ github.api_url }}'
          base_ref: &github_base_ref '${{ github.base_ref }}'
          env: &github_env '${{ github.env }}'
          event: &github_event '${{ github.event }}'
          event_name: &github_event_name '${{ github.event_name }}'
          event_path: &github_event_path '${{ github.event_path }}'
          graphql_url: &github_graphql_url '${{ github.graphql_url }}'
          head_ref: &github_head_ref '${{ github.head_ref }}'
          job: &github_job '${{ github.job }}'
          job_workflow_sha: &github_job_workflow_sha '${{ github.job_workflow_sha }}'
          path: &github_path '${{ github.path }}'
          ref: &github_ref '${{ github.ref }}'
          ref_name: &github_ref_name '${{ github.ref_name }}'
          ref_protected: &github_ref_protected '${{ github.ref_protected }}'
          ref_type: &github_ref_type '${{ github.ref_type }}'
          repository: &github_repository '${{ github.repository }}'
          repository_id: &github_repository_id '${{ github.repository_id }}'
          repository_owner: &github_repository_owner '${{ github.repository_owner }}'
          repository_owner_id: &github_repository_owner_id '${{ github.repository_owner_id }}'
          repositoryUrl: &github_repositoryUrl '${{ github.repositoryUrl }}'
          retention_days: &github_retention_days '${{ github.retention_days }}'
          run_id: &github_run_id '${{ github.run_id }}'
          run_number: &github_run_number '${{ github.run_number }}'
          run_attempt: &github_run_attempt '${{ github.run_attempt }}'
          secret_source: &github_secret_source '${{ github.secret_source }}'
          server_url: &github_server_url '${{ github.server_url }}'
          sha: &github_sha '${{ github.sha }}'
          token: &github_token '${{ github.token }}'
          triggering_actor: &github_triggering_actor '${{ github.triggering_actor }}'
          workflow: &github_workflow '${{ github.workflow }}'
          workflow_ref: &github_workflow_ref '${{ github.workflow_ref }}'
          workflow_sha: &github_workflow_sha '${{ github.workflow_sha }}'
          workspace: &github_workspace '${{ github.workspace }}'
        EOF

    - name: 'Append testplan from URL'
      if: ${{ inputs.repository == '' }}
      shell: bash
      run: |
        curl -sSjkL "${{ inputs.testplan }}" >>.testplan.yml
        cat .testplan.yml
        if [ -n "${{ inputs.override }}" ]; then
          echo "${{ inputs.override }}" >>.testplan_override.yml
        fi

    - name: 'Append testplan from file'
      if: ${{ inputs.repository != '' }}
      shell: bash
      run: |
        cat "${{ inputs.testplan }}" >>.testplan.yml
        if [ -n "${{ inputs.override }}" ]; then
          echo "${{ inputs.override }}" >>.testplan_override.yml
        fi

    - name: 'Load variables'
      uses: actions-tools/yaml-outputs@v2
      id: yaml
      with:
        file-path: .testplan.yml
        separator: '_'

    - name: 'Dump Testplan on failure'
      if: failure()
      shell: bash
      run: cat .testplan.yml
        
    - name: 'Load overrides'
      uses: actions-tools/yaml-outputs@v2
      if: ${{ inputs.override != '' }}
      with:
        file-path: .testplan_override.yml
        separator: '_'

    - name: 'Dump Testplan on failure'
      if: failure()
      shell: bash
      run: cat .testplan_override.yml

    - name: 'Dump variables'
      shell: bash
      run: |
        echo -e "\033[0;35m### Environment"
        env
        echo -e "\033[0m"

outputs:
  # workflow variables
  workflow_matrix_mysql:
    value: ${{ steps.yaml.outputs.workflow_matrix_mysql}}
  workflow_matrix_php:
    value: ${{ steps.yaml.outputs.workflow_matrix_php}}
  workflow_max_parallel:
    value: ${{ steps.yaml.outputs.workflow_max_parallel}}
  # global variables
  global_git_sdk_url:
    value: ${{ steps.yaml.outputs.global_git_sdk_url}}
  global_git_sdk_ref:
    value: ${{ steps.yaml.outputs.global_git_sdk_ref}}
  global_git_shop_url:
    value: ${{ steps.yaml.outputs.global_git_shop_url}}
  global_git_shop_ref:
    value: ${{ steps.yaml.outputs.global_git_shop_ref}}
  global_is_enterprise:
    value: ${{ steps.yaml.outputs.global_is_enterprise}}
  global_git_enterprise_ref:
    value: ${{ steps.yaml.outputs.global_git_enterprise_ref}}
  global_cache_bucket:
    value: ${{ steps.yaml.outputs.global_cache_bucket}}
  global_container:
    value: ${{ steps.yaml.outputs.global_container}}
  global_container_options:
    value: ${{ steps.yaml.outputs.global_container_options}}
  global_container_method:
    value: ${{ steps.yaml.outputs.global_container_method}}
  # init variables
  init_docker_login:
    value: ${{ steps.yaml.outputs.init_docker_login}}
  # prepare_shop variables
  prepare_shop_matrix_mysql:
    value: ${{ steps.yaml.outputs.prepare_shop_matrix_mysql}}
  prepare_shop_matrix_php:
    value: ${{ steps.yaml.outputs.prepare_shop_matrix_php}}
  prepare_shop_max_parallel:
    value: ${{ steps.yaml.outputs.prepare_shop_max_parallel}}
  prepare_shop_container:
    value: ${{ steps.yaml.outputs.prepare_shop_container}}
  prepare_shop_container_options:
    value: ${{ steps.yaml.outputs.prepare_shop_container_options}}
  prepare_shop_container_method:
    value: ${{ steps.yaml.outputs.prepare_shop_container_method}}
  prepare_shop_git_sdk_url:
    value: ${{ steps.yaml.outputs.prepare_shop_git_sdk_url}}
  prepare_shop_git_sdk_ref:
    value: ${{ steps.yaml.outputs.prepare_shop_git_sdk_ref}}
  prepare_shop_git_shop_url:
    value: ${{ steps.yaml.outputs.prepare_shop_git_shop_url}}
  prepare_shop_git_shop_ref:
    value: ${{ steps.yaml.outputs.prepare_shop_git_shop_ref}}
  prepare_shop_git_enterprise_ref:
    value: ${{ steps.yaml.outputs.prepare_shop_git_enterprise_ref}}
  prepare_shop_is_enterprise:
    value: ${{ steps.yaml.outputs.prepare_shop_is_enterprise}}
  prepare_shop_cache_bucket:
    value: ${{ steps.yaml.outputs.prepare_shop_cache_bucket}}
  prepare_shop_custom_ini_error_reporting:
    value: ${{ steps.yaml.outputs.prepare_shop_custom_ini_error_reporting}}
  prepare_shop_custom_ini_xdebug:
    value: ${{ steps.yaml.outputs.prepare_shop_custom_ini_xdebug}}
  prepare_shop_add_services:
    value: ${{ steps.yaml.outputs.prepare_shop_add_services}}
  prepare_shop_themes_install:
    value: ${{ steps.yaml.outputs.shop_setup_tests_themes_install}}
  prepare_shop_themes_options:
    value: ${{ steps.yaml.outputs.shop_setup_tests_themes_options}}
  prepare_shop_themes_update:
    value: ${{ steps.yaml.outputs.shop_setup_tests_themes_update}}
  prepare_shop_themes_update_options:
    value: ${{ steps.yaml.outputs.shop_setup_tests_themes_update_options}}

  # install_shop variables
  install_shop_matrix_mysql:
    value: ${{ steps.yaml.outputs.install_shop_matrix_mysql}}
  install_shop_matrix_php:
    value: ${{ steps.yaml.outputs.install_shop_matrix_php}}
  install_shop_max_parallel:
    value: ${{ steps.yaml.outputs.install_shop_max_parallel}}
  install_shop_container:
    value: ${{ steps.yaml.outputs.install_shop_container}}
  install_shop_container_options:
    value: ${{ steps.yaml.outputs.install_shop_container_options}}
  install_shop_container_method:
    value: ${{ steps.yaml.outputs.install_shop_container_method}}
  install_shop_git_shop_ref:
    value: ${{ steps.yaml.outputs.install_shop_git_shop_ref}}
  install_shop_git_enterprise_ref:
    value: ${{ steps.yaml.outputs.install_shop_git_enterprise_ref}}
  install_shop_is_enterprise:
    value: ${{ steps.yaml.outputs.install_shop_is_enterprise}}
  install_shop_cache_bucket:
    value: ${{ steps.yaml.outputs.install_shop_cache_bucket}}
  install_shop_config_idebug:
    value: ${{ steps.yaml.outputs.install_shop_config_idebug}}
  install_shop_output_files:
    value: ${{ steps.yaml.outputs.install_shop_output_files}}
  # unit_tests variables
  unit_tests_skip:
    value: ${{ steps.yaml.outputs.unit_tests_skip}}
  unit_tests_matrix_mysql:
    value: ${{ steps.yaml.outputs.unit_tests_matrix_mysql}}
  unit_tests_matrix_php:
    value: ${{ steps.yaml.outputs.unit_tests_matrix_php}}
  unit_tests_max_parallel:
    value: ${{ steps.yaml.outputs.unit_tests_max_parallel}}
  unit_tests_container:
    value: ${{ steps.yaml.outputs.unit_tests_container}}
  unit_tests_container_options:
    value: ${{ steps.yaml.outputs.unit_tests_container_options}}
  unit_tests_container_method:
    value: ${{ steps.yaml.outputs.unit_tests_container_method}}
  unit_tests_cache_bucket:
    value: ${{ steps.yaml.outputs.unit_tests_cache_bucket}}
  unit_tests_configuration:
    value: ${{ steps.yaml.outputs.unit_tests_configuration}}
  unit_tests_test:
    value: ${{ steps.yaml.outputs.unit_tests_test}}
  unit_tests_additional_options:
    value: ${{ steps.yaml.outputs.unit_tests_additional_options}}
  unit_tests_logfile_artifact:
    value: ${{ steps.yaml.outputs.unit_tests_logfile_artifact}}
  unit_tests_output_files:
    value: ${{ steps.yaml.outputs.unit_tests_output_files}}
  unit_tests_coverage_path:
    value: ${{ steps.yaml.outputs.unit_tests_coverage_path}}
  unit_tests_failure_pattern:
    value: ${{ steps.yaml.outputs.unit_tests_failure_pattern}}
  # integration_tests variables
  integration_tests_skip:
    value: ${{ steps.yaml.outputs.integration_tests_skip}}
  integration_tests_matrix_mysql:
    value: ${{ steps.yaml.outputs.integration_tests_matrix_mysql}}
  integration_tests_matrix_php:
    value: ${{ steps.yaml.outputs.integration_tests_matrix_php}}
  integration_tests_max_parallel:
    value: ${{ steps.yaml.outputs.integration_tests_max_parallel}}
  integration_tests_container:
    value: ${{ steps.yaml.outputs.integration_tests_container}}
  integration_tests_container_options:
    value: ${{ steps.yaml.outputs.integration_tests_container_options}}
  integration_tests_container_method:
    value: ${{ steps.yaml.outputs.integration_tests_container_method}}
  integration_tests_cache_bucket:
    value: ${{ steps.yaml.outputs.integration_tests_cache_bucket}}
  integration_tests_configuration:
    value: ${{ steps.yaml.outputs.integration_tests_configuration}}
  integration_tests_test:
    value: ${{ steps.yaml.outputs.integration_tests_test}}
  integration_tests_additional_options:
    value: ${{ steps.yaml.outputs.integration_tests_additional_options}}
  integration_tests_logfile_artifact:
    value: ${{ steps.yaml.outputs.integration_tests_logfile_artifact}}
  integration_tests_output_files:
    value: ${{ steps.yaml.outputs.integration_tests_output_files}}
  integration_tests_coverage_path:
    value: ${{ steps.yaml.outputs.integration_tests_coverage_path}}
  integration_tests_failure_pattern:
    value: ${{ steps.yaml.outputs.integration_tests_failure_pattern}}
  # codeception_tests variables
  codeception_tests_skip:
    value: ${{ steps.yaml.outputs.codeception_tests_skip}}
  codeception_tests_matrix_mysql:
    value: ${{ steps.yaml.outputs.codeception_tests_matrix_mysql}}
  codeception_tests_matrix_php:
    value: ${{ steps.yaml.outputs.codeception_tests_matrix_php}}
  codeception_tests_max_parallel:
    value: ${{ steps.yaml.outputs.codeception_tests_max_parallel}}
  codeception_tests_container:
    value: ${{ steps.yaml.outputs.codeception_tests_container}}
  codeception_tests_container_options:
    value: ${{ steps.yaml.outputs.codeception_tests_container_options}}
  codeception_tests_container_method:
    value: ${{ steps.yaml.outputs.codeception_tests_container_method}}
  codeception_tests_cache_bucket:
    value: ${{ steps.yaml.outputs.codeception_tests_cache_bucket}}
  codeception_tests_themes_install:
    value: ${{ steps.yaml.outputs.codeception_tests_themes_install}}
  codeception_tests_themes_options:
    value: ${{ steps.yaml.outputs.codeception_tests_themes_options}}
  codeception_tests_themes_update:
    value: ${{ steps.yaml.outputs.codeception_tests_themes_update}}
  codeception_tests_themes_update_options:
    value: ${{ steps.yaml.outputs.codeception_tests_themes_update_options}}
  codeception_tests_configuration:
    value: ${{ steps.yaml.outputs.codeception_tests_configuration}}
  codeception_tests_build:
    value: ${{ steps.yaml.outputs.codeception_tests_build}}
  codeception_tests_suite:
    value: ${{ steps.yaml.outputs.codeception_tests_suite}}
  codeception_tests_test:
    value: ${{ steps.yaml.outputs.codeception_tests_test}}
  codeception_tests_additional_options:
    value: ${{ steps.yaml.outputs.codeception_tests_additional_options}}
  codeception_tests_logfile_artifact:
    value: ${{ steps.yaml.outputs.codeception_tests_logfile_artifact}}
  codeception_tests_output_files:
    value: ${{ steps.yaml.outputs.codeception_tests_output_files}}
  codeception_tests_coverage_path:
    value: ${{ steps.yaml.outputs.codeception_tests_coverage_path}}
  codeception_tests_failure_pattern:
    value: ${{ steps.yaml.outputs.codeception_tests_failure_pattern}}
  # shop_setup_tests variables
  shop_setup_tests_skip:
    value: ${{ steps.yaml.outputs.shop_setup_tests_skip}}
  shop_setup_tests_matrix_mysql:
    value: ${{ steps.yaml.outputs.shop_setup_tests_matrix_mysql}}
  shop_setup_tests_matrix_php:
    value: ${{ steps.yaml.outputs.shop_setup_tests_matrix_php}}
  shop_setup_tests_max_parallel:
    value: ${{ steps.yaml.outputs.shop_setup_tests_max_parallel}}
  shop_setup_tests_container:
    value: ${{ steps.yaml.outputs.shop_setup_tests_container}}
  shop_setup_tests_container_options:
    value: ${{ steps.yaml.outputs.shop_setup_tests_container_options}}
  shop_setup_tests_container_method:
    value: ${{ steps.yaml.outputs.shop_setup_tests_container_method}}
  shop_setup_tests_cache_bucket:
    value: ${{ steps.yaml.outputs.shop_setup_tests_cache_bucket}}
  shop_setup_tests_themes_install:
    value: ${{ steps.yaml.outputs.shop_setup_tests_themes_install}}
  shop_setup_tests_themes_options:
    value: ${{ steps.yaml.outputs.shop_setup_tests_themes_options}}
  shop_setup_tests_themes_update:
    value: ${{ steps.yaml.outputs.shop_setup_tests_themes_update}}
  shop_setup_tests_themes_update_options:
    value: ${{ steps.yaml.outputs.shop_setup_tests_themes_update_options}}
  shop_setup_tests_configuration:
    value: ${{ steps.yaml.outputs.shop_setup_tests_configuration}}
  shop_setup_tests_build:
    value: ${{ steps.yaml.outputs.shop_setup_tests_build}}
  shop_setup_tests_suite:
    value: ${{ steps.yaml.outputs.shop_setup_tests_suite}}
  shop_setup_tests_test:
    value: ${{ steps.yaml.outputs.shop_setup_tests_test}}
  shop_setup_tests_additional_options:
    value: ${{ steps.yaml.outputs.shop_setup_tests_additional_options}}
  shop_setup_tests_logfile_artifact:
    value: ${{ steps.yaml.outputs.shop_setup_tests_logfile_artifact}}
  shop_setup_tests_output_files:
    value: ${{ steps.yaml.outputs.shop_setup_tests_output_files}}
  shop_setup_tests_coverage_path:
    value: ${{ steps.yaml.outputs.shop_setup_tests_coverage_path}}
  shop_setup_tests_failure_pattern:
    value: ${{ steps.yaml.outputs.shop_setup_tests_failure_pattern}}
  # deprecated_tests variables
  deprecated_tests_skip:
    value: ${{ steps.yaml.outputs.deprecated_tests_skip}}
  deprecated_tests_matrix_mysql:
    value: ${{ steps.yaml.outputs.deprecated_tests_matrix_mysql}}
  deprecated_tests_matrix_php:
    value: ${{ steps.yaml.outputs.deprecated_tests_matrix_php}}
  deprecated_tests_max_parallel:
    value: ${{ steps.yaml.outputs.deprecated_tests_max_parallel}}
  deprecated_tests_container:
    value: ${{ steps.yaml.outputs.deprecated_tests_container}}
  deprecated_tests_container_options:
    value: ${{ steps.yaml.outputs.deprecated_tests_container_options}}
  deprecated_tests_container_method:
    value: ${{ steps.yaml.outputs.deprecated_tests_container_method}}
  deprecated_tests_cache_bucket:
    value: ${{ steps.yaml.outputs.deprecated_tests_cache_bucket}}
  deprecated_tests_themes_install:
    value: ${{ steps.yaml.outputs.deprecated_tests_themes_install}}
  deprecated_tests_themes_options:
    value: ${{ steps.yaml.outputs.deprecated_tests_themes_options}}
  deprecated_tests_themes_update:
    value: ${{ steps.yaml.outputs.deprecated_tests_themes_update}}
  deprecated_tests_themes_update_options:
    value: ${{ steps.yaml.outputs.deprecated_tests_themes_update_options}}
  deprecated_tests_test:
    value: ${{ steps.yaml.outputs.deprecated_tests_test}}
  deprecated_tests_additional_options:
    value: ${{ steps.yaml.outputs.deprecated_tests_additional_options}}
  deprecated_tests_logfile_artifact:
    value: ${{ steps.yaml.outputs.deprecated_tests_logfile_artifact}}
  deprecated_tests_output_files:
    value: ${{ steps.yaml.outputs.deprecated_tests_output_files}}
  deprecated_tests_coverage_path:
    value: ${{ steps.yaml.outputs.deprecated_tests_coverage_path}}
  deprecated_tests_failure_pattern:
    value: ${{ steps.yaml.outputs.deprecated_tests_failure_pattern}}
  # sonarcloud_variables
  sonarcloud_skip:
    value: ${{ steps.yaml.outputs.sonarcloud_skip}}
  sonarcloud_matrix_mysql:
    value: ${{ steps.yaml.outputs.sonarcloud_matrix_mysql}}
  sonarcloud_matrix_php:
    value: ${{ steps.yaml.outputs.sonarcloud_matrix_php}}
  sonarcloud_max_parallel:
    value: ${{ steps.yaml.outputs.sonarcloud_max_parallel}}
  sonarcloud_target_branch:
    value: ${{ steps.yaml.outputs.sonarcloud_target_branch}}
  sonarcloud_organization:
    value: ${{ steps.yaml.outputs.sonarcloud_organization}}
  sonarcloud_project_key:
    value: ${{ steps.yaml.outputs.sonarcloud_project_key}}
  sonarcloud_project_name:
    value: ${{ steps.yaml.outputs.sonarcloud_project_name}}
  sonarcloud_parameters:
    value: ${{ steps.yaml.outputs.sonarcloud_parameters}}
  sonarcloud_internal_project_name:
    value: ${{ steps.yaml.outputs.sonarcloud_internal_project_name}}
  sonarcloud_internal_parameters:
    value: ${{ steps.yaml.outputs.sonarcloud_internal_parameters}}
  
  # finish variables
  finish_skip:
    value: ${{ steps.yaml.outputs.finish_skip}}
  finish_matrix_mysql:
    value: ${{ steps.yaml.outputs.finish_matrix_mysql}}
  finish_matrix_php:
    value: ${{ steps.yaml.outputs.finish_matrix_php}}
  finish_docker_logout:
    value: ${{ steps.yaml.outputs.finish_docker_logout}}
