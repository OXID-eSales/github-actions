name: 'composer_require'
description: 'Requires a repository'
inputs:
  organisation:
    type: string
    required: false
    description: 'Organisation for the repository'
    default: 'oxid-esales'
  repository:
    type: string
    required: true
    description: 'Space separated list of repositories to install'
  ref:
    type: string
    required: false
    description: 'Branch to check out'
    default: ''
  options:
    type: string
    required: false
    description: 'Options to pass along to composer during install'
    default: '--with-all-dependencies'
  update:
    type: boolean
    required: false
    description: 'Run composer update after installing all repos'
    default: true
  update_options:
    type: string
    required: false
    description: 'Options to pass along to composer when running composer update'
    default: '--no-interaction'
  container:
    type: string
    required: false
    description: 'Name of the container running PHP'
    default: 'php'
  container_options:
    type: string
    required: false
    description: 'Additional options to pass into the container'
    default: ''
  container_method:
    type: string
    required: false
    description: 'Method to execute the commands inside a container, either "run" or "exec"'
    default: 'exec'
    
runs:
  using: "composite"
  steps:
  - name: Require Repositories
    shell: bash
    run: |
      if [ -z "${{ inputs.ref }}"]; then
        REF=""
      else
        REF=":${{ inputs.ref }}"
      fi
      for REPOSITORY in ${{ inputs.repositories }}; do
        echo -e "\033[0;35m### Requiring ${REPOSITORY}${REF} with ${{ inputs.options }}\033[0m"
        docker-compose ${{ inputs.container_method }} -T \
          ${{ inputs.container_options }} \
          ${{ inputs.container }} \
          composer require "${{ inputs.organisation }}/${REPOSITORY}:${REF}" ${{ inputs.options }}
      done
      if [ '${{ inputs.update }}' == 'true' ]; then
        echo -e "\033[0;35m### Running composer update with ${{ inputs.update_options }}\033[0m"
        docker-compose ${{ inputs.container_method }} -T \
          ${{ inputs.container_options }} \
          ${{ inputs.container }} \
          composer update ${{ inputs.update_options }}
      fi
