name: 'start_shop'
description: 'Fetches a shop from cache and starts it'
inputs:
  cached_shop:
    type: string
    required: true
    description: 'Name of the cached object from prepare_shop/install_shop'
  cache_bucket:
    type: string
    required: false
    description: 'Name of the local s3 cache bucket'
    default: 'oxideshop-ee'
  cache_endpoint:
    type: string
    required: false
    description: 'secrets.CACHE_ENDPOINT for actions-cache'
    default: ''
  cache_access_key:
    type: string
    required: false
    description: 'secrets.CACHE_ACCESS_KEY for actions-cache'
    default: ''
  cache_secret_key:
    type: string
    required: false
    description: 'secrets.CACHE_SECRET_KEY  for actions-cache'
    default: ''
runs:
  using: "composite"
  steps:
    - name: Load cached shop from cache
      id: load_installed_shop
      uses: tespkg/actions-cache@v1
      with:
        path: |
          ./*
        key: ${{ inputs.cached_shop }}
        restore-keys: |
          ${{ inputs.cached_shop }}
        endpoint: ${{ inputs.cache_endpoint }}
        accessKey: ${{ inputs.cache_access_key }}
        secretKey: ${{ inputs.cache_secret_key }}
        bucket: ${{ inputs.cache_bucket }}

    - name: Confirm successful restore
      shell: bash
      run: |
        if [ "${{ steps.load_installed_shop.outputs.cache-hit }}" != "true" ]; then
          echo -e "\033[0;31m### Failed to load ${{ inputs.installed_shop }} from cache\033[0m"
          exit 1
        fi

    - name: Start containers
      shell: bash
      run: |
        echo -e "\033[0;35m### Starting containers\033[0m"
        make up
        sleep 2

    - name: Output docker logs if make up failed
      if: failure()
      shell: bash
      run: |
        echo -e "\033[0;31m### Starting containers failed\033[0m"
        cat docker-compose.yml
        docker-compose logs --tail=all
        for c in $(docker ps -aq); do
          echo "*** Logs for $c ***"
          docker logs -n 200 $c
        done
