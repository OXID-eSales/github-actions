name: 'styles'
description: 'Configures styles'
inputs:
  path:
    type: string
    required: true
    description: 'Folder to run the tests in'
  module_ids:
    type: string
    required: true
    description: 'Moduleids'
  install_options:
    type: string
    required: false
    description: 'Options to pass along to composer when running composer install'
    default: ''
  container_name:
    type: string
    required: false
    description: 'Name of the container to run the test in'
    default: 'php'
  container_options:
    type: string
    required: false
    description: 'Additional options to pass into the container'
    default: ''
  container_method:
    type: string
    required: false
    description: 'Method to execute the commands inside a container, either "run" or "exec"'
    default: 'exec'
  output_files:
    type: string
    required: false
    description: 'phpunit output and test settings'
    default: |
      source/tests/reports/phpstan*.report.json
      source/tests/reports/phpmd*.report.json
      source/tests/reports/phpcs*.report.json
      source/tests/reports/phpstan*.report.txt
      source/tests/reports/phpmd*.report.txt
      source/tests/reports/phpcs*.report.txt
  output_artifact:
    type: string
    required: false
    description: 'Github run artifact for the phpunit output'
    default: 'StylesLog'

runs:
  using: "composite"
  steps:
    - name: Run composer install
      shell: bash
      run: |
        mkdir -p source/tests/reports
        echo -e "\033[0;35m### Running composer install with ${{ inputs.install_options }}\033[0m"
        docker-compose ${{ inputs.container_method }} -T \
          ${{ inputs.container_options }} \
          --workdir '/var/www/dev-packages/${{ inputs.path }}' \
          ${{ inputs.container_name }} \
          composer install ${{ inputs.install_options }}

    - name: Run phpstan
      id: phpstan
      shell: bash
      run: |
        echo -e "\033[0;35m###  Run phpstan-report in ${{ inputs.path }} ###\033[0m"
        docker-compose ${{ inputs.container_method }} -T \
          ${{ inputs.container_options }} \
          --workdir '/var/www/dev-packages/${{ inputs.path }}' \
          ${{ inputs.container_name }} \
          composer phpstan-report
        echo -e "\033[0;35m###  Run phpstan in ${{ inputs.path }} ###\033[0m"
        docker-compose ${{ inputs.container_method }} -T \
          ${{ inputs.container_options }} \
          --workdir '/var/www/dev-packages/${{ inputs.path }}' \
          ${{ inputs.container_name }} \
          composer phpstan
        mv source/dev-packages/${{ inputs.path }}/phpstan.report.json source/tests/reports/phpstan-${{ inputs.module_ids }}.report.json
        mv source/dev-packages/${{ inputs.path }}/phpstan.report.txt source/tests/reports/phpstan-${{ inputs.module_ids }}.report.txt

    - name: Run phpmd
      id: phpmd
      if: always()
      continue-on-error: true
      shell: bash
      run: |
        echo -e "\033[0;35m###  Run phpmd-report in ${{ inputs.path }} ###\033[0m"
        docker-compose ${{ inputs.container_method }} -T \
          ${{ inputs.container_options }} \
          --workdir '/var/www/dev-packages/${{ inputs.path }}' \
          ${{ inputs.container_name }} \
          composer phpmd-report
        echo -e "\033[0;35m###  Run phpmd in ${{ inputs.path }} ###\033[0m"
        docker-compose ${{ inputs.container_method }} -T \
          ${{ inputs.container_options }} \
          --workdir '/var/www/dev-packages/${{ inputs.path }}' \
          ${{ inputs.container_name }} \
          composer phpmd
        mv source/dev-packages/${{ inputs.path }}/phpmd.report.json source/tests/reports/phpmd-${{ inputs.module_ids }}.report.json
        mv source/dev-packages/${{ inputs.path }}/phpmd.report.txt source/tests/reports/phpmd-${{ inputs.module_ids }}.report.txt

    - name: Run phpcs
      if: always()
      shell: bash
      run: |
        echo -e "\033[0;35m###  Run phpcs-report in ${{ inputs.path }} ###\033[0m"
        docker-compose ${{ inputs.container_method }} -T \
          ${{ inputs.container_options }} \
          --workdir '/var/www/dev-packages/${{ inputs.path }}' \
          ${{ inputs.container_name }} \
          composer phpcs-report
        echo -e "\033[0;35m###  Run phpcs in ${{ inputs.path }} ###\033[0m"
        docker-compose ${{ inputs.container_method }} -T \
          ${{ inputs.container_options }} \
          --workdir '/var/www/dev-packages/${{ inputs.path }}' \
          ${{ inputs.container_name }} \
          composer phpcs
        mv source/dev-packages/${{ inputs.path }}/phpcs.report.json source/tests/reports/phpcs-${{ inputs.module_ids }}.report.json
        mv source/dev-packages/${{ inputs.path }}/phpcs.report.txt source/tests/reports/phpcs-${{ inputs.module_ids }}.report.txt

    - name: Stop containers
      if: always()
      shell: bash
      run: |
        make down

    - name: Upload log artifact
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: ${{ inputs.output_artifact }}
        path: ${{ inputs.output_files }}
