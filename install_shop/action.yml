name: 'install_shop'
description: 'Fetches the prepared shop from cache and installs it'
inputs:
  prepared_shop:
    type: string
    description: 'Name of the cached object from prepare_shop'
    required: true
  git_enterprise_ref:
    type: string
    description: 'Branch to check out for the enterprise repos'
    required: false
  github_sha:
    type: string
    required: true
    description: 'github.sha is used in generating the cache id'
  github_run_number:
    type: string
    required: false
    description: 'github.run_number and github.run_attempts are used in generating the cache id (tbd)'
    default: '0'
  github_run_attempt:
    type: string
    required: false
    description: 'github.run_number and github.run_attempts are used in generating the cache id (tbd)'
    default: '0'
  php:
    type: string
    required: true
    description: 'Version of PHP for this instance'
  mysql:
    type: string
    required: true
    description: 'Version of MySQL for this instance'
  is_enterprise:
    type: boolean
    required: false
    default: true
  cache_endpoint:
    type: string
    description: 'secrets.CACHE_ENDPOINT for actions-cache'
    required: false
    default: ''
  cache_access_key:
    type: string
    description: 'secrets.CACHE_ACCESS_KEY for actions-cache'
    required: false
    default: ''
  cache_secret_key:
    type: string
    description: 'secrets.CACHE_SECRET_KEY  for actions-cache'
    required: false
    default: ''
outputs:
  installed_shop:
    description: 'Name of the cached shop installation'
    value: ${{ steps.output.outputs.installed_shop }}
runs:
  using: "composite"
  steps:
    - name: Initialize
      id: init
      shell: bash
      run: |
        if [ "${{ inputs.is_enterprise}}" == "true" ]; then
          CACHED_NAME="shopInstallation-ee-${{ inputs.git_enterprise_ref }}-${{ inputs.php }}-${{ inputs.mysql }}-${{ inputs.github_sha }}-${{ inputs.github_run_number }}-${{ inputs.github_run_attempt }}"
        else
          CACHED_NAME="shopInstallation-ce-${{ inputs.git_shop_ref }}-${{ inputs.php }}-${{ inputs.mysql }}-${{ inputs.github_sha }}-${{ inputs.github_run_number }}-${{ inputs.github_run_attempt }}"
        fi
        cat >> $GITHUB_ENV <<EOF
        CACHED_NAME=$CACHED_NAME
        EXEC_PHP=docker-compose exec -T php
        EOF
        echo "installed_shop=$CACHED_NAME" >> $GITHUB_OUTPUT
        cat $GITHUB_ENV

    - name: Load prepared shop from cache
      id: load_prepared_shop
      uses: tespkg/actions-cache@v1
      with:
        path: |
          ./*
        key: ${{ inputs.prepared_shop }}
        restore-keys: |
          ${{ inputs.prepared_shop }}
        endpoint: ${{ inputs.cache_endpoint }}
        accessKey: ${{ inputs.cache_access_key }}
        secretKey: ${{ inputs.cache_secret_key }}
        bucket: oxideshop-ee

  - name: Confirm successful restore
    shell: bash
    run: |
      if [ "${{ steps.load_prepared_shop.outputs.cache-hit }}" != "true" ]; then
        echo "Failed to load ${{ inputs.prepared_shop }} from cache"
        exit 1
      fi

    # - name: Load prepared shop from cache (ce)
    #   if: ${{ inputs.is_enterprise == 'false' }}
    #   uses: actions/cache@v3
    #   with:
    #     fail-on-cache-miss: true
    #     path: |
    #       ./*
    #     key: preparedShop-${{ inputs.php }}-${{ inputs.mysql }}-${{ inputs.github_sha }}-${{ inputs.github_run_number }}-${{ inputs.github_run_attempt }}
    #     restore-keys: |
    #       preparedShop-${{ inputs.php }}-${{ inputs.mysql }}-${{ inputs.github_sha }}-${{ inputs.github_run_number }}-${{ inputs.github_run_attempt }}
    #       preparedShop-${{ inputs.php }}-${{ inputs.mysql }}-${{ inputs.github_sha }}
          
    - name: Start containers
      shell: bash
      run: |
        make up
        sleep 2

    - name: Output docker logs if make up failed
      if: failure()
      shell: bash
      run: |
        cat docker-compose.yml
        docker-compose logs --tail=200
        for c in $(docker ps -aq); do
          echo "*** Logs for $c ***"
          docker logs -n 200 $c
        done

    - name: Run Install Shop
      shell: bash
      run: |
        $EXEC_PHP bin/oe-console oe:setup:shop \
          --db-host mysql \
          --db-port 3306 \
          --db-name example \
          --db-user root \
          --db-password root \
          --shop-url http://localhost.local \
          --shop-directory /var/www/source \
          --compile-directory /var/www/source/tmp

    - name: Activate shop's theme
      if: ${{ inputs.is_enterprise == 'true' }}
      shell: bash
      run: |
        $EXEC_PHP bin/oe-console oe:theme:activate apex

    - name: Stop containers
      if: always()
      shell: bash
      run: |
        docker-compose down
        sleep 2

    # - name: Cache current installation (ce)
    #   if: ${{ inputs.is_enterprise == 'false' }}
    #   uses: actions/cache@v3
    #   with:
    #     path: |
    #       ./*
    #     key: ${{ env.CACHED_NAME }}

    - name: Cache current installation (ee)
      if: ${{ inputs.is_enterprise == 'true' }}
      uses: tespkg/actions-cache@v1
      with:
        path: |
          ./*
        key: ${{ env.CACHED_NAME }}
        endpoint: ${{ inputs.cache_endpoint }}
        accessKey: ${{ inputs.cache_access_key }}
        secretKey: ${{ inputs.cache_secret_key }}
        bucket: oxideshop-ee