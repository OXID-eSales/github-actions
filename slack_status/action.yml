name: 'slack_message'
description: 'Sends a status message to slack'
inputs:
  slack_webhook:
    type: string
    required: true
    description: 'Webhook for the slack channel'
  title:
    type: string
    required: true
    description: 'Title for the message, status will be added'
  summary_list:
    type: string
    required: true
    description: 'Multiple lines with Name and URL separated by a pipe'
  job_list:
    type: string
    required: true
    description: 'Name of the job and its outcome or result separated by a pipe'

runs:
  using: "composite"
  steps:
    - name: Prepare payload
      shell: bash
      run: |
        STATUS=(Skipped Success Cancelled Failure)
        EMOJI=(':white_circle:' ':white_check_mark:' ':black_circle:' ':x:')
        OVERALL_STATUS=0
        SUMMARY_PAYLOAD=""
        S="${{ inputs.summary_list }}"
        for SUMMARY in ${S}; do
          SUMMARY_NAME=$(echo ${SUMMARY}|sed -e 's#|.*##')
          SUMMARY_URL=$(echo ${SUMMARY}|sed -e 's#.*|##')
          SUMMARY_PAYLOAD="${SUMMARY_PAYLOAD},\n        { \"type\": \"mrkdwn\", \"text\": \"*${SUMMARY_NAME}:* <${SUMMARY_URL}>\\n\" }"
        done
        JOB_PAYLOAD=""
        J="${{ inputs.job_list }}"
        for JOB in ${J}; do
          JOB_NAME=$(echo ${JOB}|sed -e 's#|.*##')
          J=$(echo ${JOB}|sed -e 's#.*|##')
          case $J in
            skipped) JOB_STATUS=0
            success) JOB_STATUS=1
            cancelled) JOB_STATUS=2
            *) JOB_STATUS=3
          esac
          if [ ${JOB_STATUS} -g ${OVERALL_STATUS} ]; then
            OVERALL_STATUS=JOB_STATUS
          fi
          JOB_PAYLOAD="${JOB_PAYLOAD},\n        { \"type\": \"mrkdwn\", \"text\": \"${JOB_NAME}: ${EMOJI[JOB_STATUS]} ${STATUS[JOB_STATUS]}\"}"
        done
        cat >'payload.yaml' <<EOF
          {
            "blocks": [
              { "type": "header",
                "text":
                  { "type": "plain_text",
                    "emoji": true,
                    "text": "${EMOJI[OVERALL_STATUS} ${{ inputs.title }} ${STATUS[OVERALL_STATUS]}"
                  }
              },
              {
              "type": "divider"
              },
              { "type": "context",
                "elements": [${SUMMARY_PAYLOAD:1}
                ]
              },
              {
              "type": "divider"
              },
              { "type": "section",
                "fields": [${JOB_PAYLOAD:1}
                ]
              }
            ]
          }
        EOF
    - name: Send custom JSON data to Slack workflow
      uses: slackapi/slack-github-action@v1
      with:
        payload-file-path: 'payload.yaml'
      env:
        SLACK_WEBHOOK_URL: ${{ inputs.slack_webhook }}
        SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
