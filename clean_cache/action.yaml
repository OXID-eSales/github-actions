name: 'clean_cache'
description: 'clean the cache'
inputs:
  cache_endpoint:
    type: string
    required: true
    description: 'secrets.CACHE_ENDPOINT for actions-cache'
  cache_access_key:
    type: string
    required: true
    description: 'secrets.CACHE_ACCESS_KEY for actions-cache'
  cache_secret_key:
    type: string
    required: true
    description: 'secrets.CACHE_SECRET_KEY  for actions-cache'
  cache_objects:
    type: string
    required: true
    description: 'objects to delete for cleanup'
  runs_on:
    type: string
    required: true
    description: 'Runner for this workflow'
  path:
    type: string
    required: true
    description: 'Path in which the current project is checked out'
  debug:
    type: string
    description: 'Appended to debugging scripts'
    default: ''
    required: false

runs:
  using: composite
  steps:
    - name: Install gh-actions-cache and configure s3cmd
      shell: bash
      run: |
        # clean_cache: Install gh-actions-cache and configure s3cmd
        GH=$(type -p 'gh'||true)
        ${GH} extension install actions/gh-actions-cache
        if [[ '${{ inputs.runs_on }}' != *"ubuntu"* ]]; then
          cat >/home/runner/.s3cfg <<EOF
        [default]
        check_ssl_certificate = False
        check_ssl_hostname = False
        host_base = ${{inputs.cache_endpoint}}
        host_bucket = %(bucket)s.${{inputs.cache_endpoint}}
        accessKey: ${{ inputs.cache_access_key }}
        secretKey: ${{ inputs.cache_secret_key }}
        EOF
          chmod 0600 /home/runner/.s3cfg
        fi

    - name: Cleanup cached github objects
      shell: bash
      run: |
        # clean_cache: Cleanup cached github objects
        if [ -n '${{ inputs.path}}' ]; then
          cd '${{ inputs.path}}'
        fi
        GH=$(type -p 'gh'||true)
        if [ -n "${GH}" ]; then
          PATTERN=$(echo  '${{inputs.cache_objects}}' | tr  '\n' ' ' )
          for CACHE in ${PATTERN} ; do
            ID_LIST="$(${GH} actions-cache list --key ${CACHE}|awk '{print $1}'||true)"
            for ID in ${ID_LIST}; do
              echo -e "\033[0;35m###  Cleaning cached object '${ID}' from github ###\033[0m"
              ${GH} actions-cache delete "${ID}" --confirm
            done
          done
        fi

    - name: Clear s3 cache
      if: ${{ inputs.runs_on != '"ubuntu-latest"' }}
      shell: bash
      run: |
        # clean_cache: Clear s3 cache
        PATTERN=$(echo  '${{inputs.cache_objects}}' | tr  '\n' '|' )
        OUTPUT=$(s3cmd ls -r s3://oxideshop-ee|grep "${PATTERN}"||true)
        export IFS=''
        echo "${OUTPUT}" | while read -r LINE ; do
          FILE=$(echo "${LINE}"|awk '{print $4}')
          if [ -n "${FILE}" ]; then
            echo -e "\033[0;35m###  Cleaning cached object '${FILE}' from s3 cache ###\033[0m"
            s3cmd del "${FILE}"
          fi
          done
