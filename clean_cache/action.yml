name: 'clean_cache'
description: 'clean the cache'
inputs:
  cache_endpoint:
    type: string
    required: false
    description: 'secrets.CACHE_ENDPOINT for actions-cache'
    default: ''
  cache_access_key:
    type: string
    required: false
    description: 'secrets.CACHE_ACCESS_KEY for actions-cache'
    default: ''
  cache_secret_key:
    type: string
    required: false
    description: 'secrets.CACHE_SECRET_KEY  for actions-cache'
    default: ''

runs:
  using: composite
  steps:
      - name: Install s3cmd and gh
        if: ${{ inputs.install_ghcli == 'true' }}
        shell:
        run: |
          GH=$(type -p 'gh'||true)
          if [ -z "${GH}" ]; then
            echo -e "\033[0;35m###  Installing gh ###\033[0m"
            curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
            sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
            ARCH=$(dpkg --print-architecture)
            echo "deb [arch=${ARCH} signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" |\
            sudo tee /etc/apt/sources.list.d/github-cli.list >/dev/null
            sudo DEBIAN_FRONTEND=noninteractive apt-get -qq update
            sudo apt-get -qq install gh
          GH=$(type -p 'gh'||true)
          fi
          ${GH} extension install actions/gh-actions-cache
          sudo DEBIAN_FRONTEND=noninteractive apt-get -qq install s3cmd
          RUNS_ON='${{ inputs.runs_on }}'
          if [[ "${RUNS_ON}" != *"ubuntu" ]]; then
            cat >/home/runner/.s3cfg <<EOF
          [default]
          check_ssl_certificate = False
          check_ssl_hostname = False
          host_base = ${{inputs.cache_endpoint}}
          host_bucket = %(bucket)s.${{inputs.cache_endpoint}}
          accessKey: ${{ inputs.cache_access_key }}
          secretKey: ${{ inputs.cache_secret_key }}
          EOF
            chmod 0600 /home/runner/.s3cfg
          fi

      - name: Cleanup cached github objects
        if: ${{ steps.generate_report.outputs.overall_status == 'success' }}
        shell: bash
        run: |
          GH=$(type -p 'gh'||true)
          if [ -n "${GH}" ]; then
            # yamllint disable-line rule:line-length
            for CACHE in '${{ needs.init.outputs.init_cache_name }}' \
              '${{ needs.init.outputs.prepare_shop_cache_prefix }}' \
              '${{ needs.init.outputs.install_shop_cache_prefix }}' \
              '${{ needs.init.outputs.install_module_cache_prefix }}'; do
              ID_LIST="$(${GH} actions-cache list --key ${CACHE}|awk '{print $1}'||true)"
              for ID in ${ID_LIST}; do
              echo -e "\033[0;35m###  Cleaning cached object '${ID}' from github ###\033[0m"
                ${GH} actions-cache delete "${ID}" --confirm
              done
            done
          fi

      - name: Clear s3 cache
        if: ${{ inputs.runs_on != '"ubuntu-latest"' }}
        # yamllint disable rule:line-length
        shell:
        run: |
          OUTPUT=$(s3cmd ls -r s3://oxideshop-ee|grep '${{ needs.init.outputs.init_cache_name }}|${{ needs.init.outputs.prepare_shop_cache_prefix }}|${{ needs.init.outputs.install_shop_cache_prefix }}|${{ needs.init.outputs.install_module_cache_prefix }}'||true)
          export IFS=''
          echo "${OUTPUT}" | while read -r LINE ; do
            FILE=$(echo "${LINE}"|awk '{print $4}')
            if [ -n "${FILE}" ]; then
              echo -e "\033[0;35m###  Cleaning cached object '${FILE}' from s3 cache ###\033[0m"
              s3cmd del "${FILE}"
            fi
          done
