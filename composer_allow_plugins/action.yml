name: 'composer_allow_plugins'
description: 'Configures allow-plugins settings'
inputs:
  repositories:
    type: string
    required: true
    description: 'Space separated list of repositories to configure'
  update:
    type: boolean
    required: false
    description: 'Run composer update after configuring all repositories'
    default: false
  update_options:
    type: string
    required: false
    description: 'Options to pass along to composer when running composer update'
    default: '--no-interaction'
  container_name:
    type: string
    required: false
    description: 'Name of the container to run the test in'
    default: 'php'
  container_options:
    type: string
    required: false
    description: 'Additional options to pass into the container'
    default: ''
  container_method:
    type: string
    required: false
    description: 'Method to execute the commands inside a container, either "run" or "exec"'
    default: 'exec'

runs:
  using: "composite"
  steps:
    - name: Configure allow-plugins
      shell: bash
      run: |
        # composer_allow_plugins: Configure allow-plugins
        REPOSITORIES=$(echo -n "${{ inputs.repositories }}"| tr '\n' ' ')
        for REPOSITORY in ${REPOSITORIES}; do
          # compensate for repos with _ and config with -
          DASHED_REPO=$(echo "${REPOSITORY}"|tr '_', '-'|sed -e 's|:.*||')
          VALUE=$(echo "${REPOSITORY}"|sed -e 's|.*:||')
          echo -e "\033[0;35m###  configure allow-plugins.${DASHED_REPO} '${VALUE}'' ###\033[0m"
          docker-compose ${{ inputs.container_method }} -T \
            ${{ inputs.container_options }} \
            ${{ inputs.container_name}} \
            composer config allow-plugins.${DASHED_REPO} "${VALUE}"
        done

        if [ '${{ inputs.update }}' == 'true' ]; then
          echo -e "\033[0;35m### Running composer update with ${{ inputs.update_options }}\033[0m"
          docker-compose ${{ inputs.container_method }} -T \
            ${{ inputs.container_options }} \
            ${{ inputs.container_name}} \
            composer update ${{ inputs.update_options }}
        fi

    - name: Generate deprecation warning to summary page
      shell: bash
      run: |
        # composer_allow_plugin: Generate deprecation warning to summary page
        cat  >> $GITHUB_STEP_SUMMARY <<EOF
        # Deprecation Warning:
        This composer_allow_plugin action is deprecated and may not be supported.
        EOF
