name: 'run_test_script'
description: 'Configures styles'
inputs:
  script:
    type: string
    required: true
    description: 'script to run'
  path:
    type: string
    required: true
    description: 'Workdir for the script'
  run_composer_install:
    type: boolean
    required: false
    description: 'run composer install in the workdir'
    default: true
  install_options:
    type: string
    required: false
    description: 'Options to pass along to composer when running composer install'
    default: ''
  container_name:
    type: string
    required: false
    description: 'Name of the container to run the test in'
    default: 'php'
  container_options:
    type: string
    required: false
    description: 'Additional options to pass into the container'
    default: ''
  container_method:
    type: string
    required: false
    description: 'Method to execute the commands inside a container, either "run" or "exec"'
    default: 'exec'
  output_artifact:
    type: string
    required: false
    description: 'Github run artifact for the output'
    default: 'run_test_script'
  debug:
    type: string
    description: 'Appended to debugging scripts'
    default: ''
    required: false
  github_token:
    type: string
    description: 'Github token for composer'
    default: ''
    required: false

runs:
  using: "composite"
  steps:
    - name: Run composer script
      if: ${{ ! startsWith(inputs.script, '~/') }}
      shell: bash
      run: |
        # run_test_script: Run composer script ${{ inputs.script }}
        ${{ inputs.debug }}
        mkdir -p source/${{ inputs.path }}/tests/Output source/${{ inputs.path }}/tests/Reports
        echo -e "\033[0;35m###  Run composer ${{ inputs.script }} in ${{ inputs.path }} ###\033[0m"
        docker compose ${{ inputs.container_method }} -T \
          ${{ inputs.container_options }} \
          --workdir '/var/www/${{ inputs.path }}' \
          ${{ inputs.container_name }} \
          composer ${{ inputs.script }}

    - name: Run shell script
      if: ${{ startsWith(inputs.script, '~/' ) }}
      shell: bash
      run: |
        # run_test_script: Run shell script ${{ inputs.script }}
        ${{ inputs.debug }}
        mkdir -p source/${{ inputs.path }}/tests/Output source/${{ inputs.path }}/tests/Reports
        SCRIPT=$(echo '${{ inputs.script }}'|sed -e "s|^~/|tests/Scripts/|")
        if [ ! -f "source/${{ inputs.path }}/${SCRIPT}" ]; then
          SCRIPT=$(echo '${{ inputs.script }}'|sed -e "s|^~/|tests/scripts/|")
        fi
        if [ ! -f "source/${{ inputs.path }}/${SCRIPT}" ]; then
          echo -e "\033[0;31m###  Could not find source/${{ inputs.path }}/${SCRIPT} ###\033[0m"
        fi
        chmod a+x "source/${{ inputs.path }}/${SCRIPT}"
        echo -e "\033[0;35m###  Run ${SCRIPT} in ${{ inputs.path }} ###\033[0m"
        docker compose ${{ inputs.container_method }} -T \
          ${{ inputs.container_options }} \
          --workdir '/var/www/${{ inputs.path }}' \
          ${{ inputs.container_name }} \
          /var/www/${{ inputs.path }}/${SCRIPT}

    - name: Output php error log
      if: always()
      shell: bash
      run: |
        # run_test_script: Output php error log
        ${{ inputs.debug }}
        if [ -s data/php/logs/error_log.txt ]; then
          echo -e "\033[0;35mPHP error log\033[0m"
          cat data/php/logs/error_log.txt
        fi
        touch data/php/logs/error_log.txt
        cp data/php/logs/error_log.txt source/${{ inputs.path }}/tests/Output/

    - name: Upload artifact
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.output_artifact }}
        path: |
          source/${{ inputs.path }}/tests/Output/*
