name: 'YAML Lint'

description: 'Validate YAML syntax'

author: 'ibiqlik'

inputs:
  file_or_dir:
    description: 'File(s) or Directory, separate by space if multiple files or folder are specified'
    required: false
  config_file:
    description: 'Path to custom configuration'
    required: false
  config_data:
    description: 'Custom configuration (as YAML source)'
    required: false
  format:
    description: 'Format for parsing output [parsable,standard,colored,github,auto]'
    required: false
    default: "parsable"
  strict:
    description: 'Return non-zero exit code on warnings as well as errors'
    required: false
    default: "false"
  no_warnings:
    description: 'Output only error level problems'
    required: false
    default: "false"
  debug:
    type: string
    description: 'Appended to debugging scripts'
    default: ''
    required: false

outputs:
  logfile:
    description: "Yamllint log file path"
    value: ${{ steps.yamllint.outputs.logfile }}

runs:
  using: 'composite'
  steps:
    - id: yamllint
      run: |
        # yamllint: yamllint
        ${{ inputs.debug }}
        # shellcheck disable=SC2086

        YL=$(type -p 'yamllint'||true)
        set -o pipefail
        if [[ -z "$LOGFILE" ]]; then
          LOGFILE=$(mktemp yamllint-XXXXXX)
        fi
        if [[ -n "$INPUT_CONFIG_FILE" ]]; then
            options+=(-c "$INPUT_CONFIG_FILE")
        fi
        if [[ -n "$INPUT_CONFIG_DATA" ]]; then
            options+=(-d "$INPUT_CONFIG_DATA")
        fi
        options+=(-f "$INPUT_FORMAT")
        if [[ "$INPUT_STRICT" == "true" ]]; then
            options+=(-s)
        fi
        if [[ "$INPUT_NO_WARNINGS" == "true" ]]; then
            options+=(--no-warnings)
        fi
        # Enable globstar so ** globs recursively
        shopt -s globstar
        yamllint "${options[@]}" ${INPUT_FILE_OR_DIR:-.} | tee -a "$LOGFILE"
        exitcode=$?
        shopt -u globstar
        echo "logfile=$(realpath ${LOGFILE})" >> "$GITHUB_OUTPUT"
        exit $exitcode
      shell: bash
      env:
        INPUT_FILE_OR_DIR: ${{ inputs.file_or_dir }}
        INPUT_CONFIG_FILE: ${{ inputs.config_file }}
        INPUT_CONFIG_DATA: ${{ inputs.config_data }}
        INPUT_FORMAT: ${{ inputs.format }}
        INPUT_STRICT: ${{ inputs.strict }}
        INPUT_NO_WARNINGS: ${{ inputs.no_warnings }}
