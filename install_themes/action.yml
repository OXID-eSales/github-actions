name: 'install_themes'
description: 'Installs oxidshop themes'
inputs:
  themes:
    type: string
    required: true
    description: 'Space separated list of themes to install'
  options:
    type: string
    required: false
    description: 'Options to pass along to composer during install'
    default: '--with-all-dependencies'
  update:
    type: boolean
    required: false
    description: 'Run composer update after installing all themes'
    default: true
  update_options:
    type: string
    required: false
    description: 'Options to pass along to composer when running composer update'
    default: '--no-interaction'
  container_name:
    type: string
    required: false
    description: 'Name of the container to run the test in'
    default: 'php'
  container_options:
    type: string
    required: false
    description: 'Additional options to pass into the container'
    default: ''
  container_method:
    type: string
    required: false
    description: 'Method to execute the commands inside a container, either "run" or "exec"'
    default: 'exec'
  slack_webhook:
    type: string
    required: true
    description: 'URL for the channel web hook, see https://api.slack.com/apps/A04CAPK58G0/incoming-webhooks?'

runs:
  using: "composite"
  steps:
    - name: Install themes
      shell: bash
      run: |
        for THEME in ${{ inputs.themes }}; do
          echo -e "\033[0;35m### Installing ${THEME} with ${{ inputs.options }}\033[0m"
          docker-compose ${{ inputs.container_method }} -T ${{ inputs.container_options }} \
            ${{ inputs.container }} \
            composer require "${THEME}" ${{ inputs.options }}
        done
        if [ '${{ inputs.update }}' == 'true' ]; then
          echo -e "\033[0;35m### Running composer update with ${{ inputs.update_options }}\033[0m"
          docker-compose ${{ inputs.container_method }} -T ${{ inputs.container_options }} \
            ${{ inputs.container }} \
            composer update ${{ inputs.update_options }}
        fi

    - name: Generate deprecation warning to summary page
      shell: bash
      run: |
          echo "Deprecation Warning:"
          echo "---------------------"
          echo -e "\033[0;31m### This actions are deprecated and may not be supported ${{ inputs.install_theme}} \033[0m"
          exit 1

    - name: 'Output report'
      shell: bash
      run: |
        for FILE in $(find reports -type f|sort); do
          cat "${FILE}" >>github_report.md
        done
        cat github_report.md >>"${GITHUB_STEP_SUMMARY}"

        for FILE in $(find slack_reports -type f|sort); do
          cat "${FILE}" >>slack_report.md
        done
        SLACK_MARKDOWN=$(cat slack_report.md|sed 's/$/\\n/g' | tr -d '\n')
        cat >slack_deprecated.json <<EOF
        {
          "blocks": [
            {
              "type": "header",
              "text": {
                "type": "plain_text",
                "emoji": true,
                "text": "${{inputs.title}} ${{ steps.process_slack.outputs.overall_status}}"
              }
            },
            {
              "type": "section",
              "text": {
                "type": "mrkdwn",
                "text": "${SLACK_MARKDOWN}"
              }
            }
          ]
        }
        EOF    

    - name: Send a deprecation warning link to slack channel
      uses: slackapi/slack-github-action@v1
      with:
          payload-file-path: 'slack_deprecated.json'
      env:
          SLACK_WEBHOOK_URL: "https://hooks.slack.com/services/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"
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
